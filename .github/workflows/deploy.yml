name: Deploy to Firebase

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run typecheck
      
    - name: Run linting
      run: npm run lint
      
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        NEXT_PUBLIC_BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
        NEXT_PUBLIC_BSC_TESTNET_RPC_URL: ${{ secrets.BSC_TESTNET_RPC_URL }}
        NEXT_PUBLIC_PANCAKESWAP_ROUTER: ${{ secrets.PANCAKESWAP_ROUTER }}
        NEXT_PUBLIC_PANCAKESWAP_TESTNET_ROUTER: ${{ secrets.PANCAKESWAP_TESTNET_ROUTER }}
        NEXT_PUBLIC_WBNB_ADDRESS: ${{ secrets.WBNB_ADDRESS }}
        NEXT_PUBLIC_BBFT_CONTRACT_ADDRESS: ${{ secrets.BBFT_CONTRACT_ADDRESS }}
        NEXT_PUBLIC_BBFT_TREASURY_ADDRESS: ${{ secrets.BBFT_TREASURY_ADDRESS }}
        NEXT_PUBLIC_BBFT_DEV_WALLET: ${{ secrets.BBFT_DEV_WALLET }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        NEXT_PUBLIC_BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
        NEXT_PUBLIC_BSC_TESTNET_RPC_URL: ${{ secrets.BSC_TESTNET_RPC_URL }}
        NEXT_PUBLIC_PANCAKESWAP_ROUTER: ${{ secrets.PANCAKESWAP_ROUTER }}
        NEXT_PUBLIC_PANCAKESWAP_TESTNET_ROUTER: ${{ secrets.PANCAKESWAP_TESTNET_ROUTER }}
        NEXT_PUBLIC_WBNB_ADDRESS: ${{ secrets.WBNB_ADDRESS }}
        NEXT_PUBLIC_BBFT_CONTRACT_ADDRESS: ${{ secrets.BBFT_CONTRACT_ADDRESS }}
        NEXT_PUBLIC_BBFT_TREASURY_ADDRESS: ${{ secrets.BBFT_TREASURY_ADDRESS }}
        NEXT_PUBLIC_BBFT_DEV_WALLET: ${{ secrets.BBFT_DEV_WALLET }}
        
    - name: Deploy to Firebase
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        channelId: live
        projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
        
    - name: Deploy Firestore rules
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
        only: firestore:rules
        
    - name: Deploy Storage rules
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
        only: storage:rules
